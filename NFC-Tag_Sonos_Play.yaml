blueprint:
  name: NFC-Tag Sonos Steuerung
  description: >
    # ðŸ’¡ NFC-Tag plays Music
    
    **Version: 0.2**
    With this blueprint, you can select which music should be played when an NFC tag is scanned. âœ¨

  domain: automation
  input:
    tag_id:
      name: NFC-Tag ID
      description: "The ID of the NFC tag that triggers this automation."
      selector:
        text:

    media_player:
      name: Speakers
      description: "The speakers to be controlled. You can select multiple."
      selector:
        entity:
          domain: media_player
          multiple: true

    media_content_id:
      name: Media content
      description: "The Spotify playlist or the radio station to be played."
      selector:
        text:

    media_content_type:
      name: Media content type
      description: "Type of content to be played."
      selector:
        select:
          options:
            - label: "Spotify"
              value: "spotify"
            - label: "Internet-Radio"
              value: "music"

    is_radio:
      name: More than one Radio station?
      description: "If activated, the system switches through a channel list."
      default: false
      selector:
        boolean:

    stations:
      name: Radio station list
      description: "List of radio stream URLs (only relevant for Internet-Radio)."
      default: []
      selector:
        object:

trigger:
  - platform: tag
    tag_id: !input tag_id

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ states('input_text.last_scanned_tag') == tag_id }}"
          - condition: state
            entity_id: !input media_player
            state: playing
        sequence:
          - service: media_player.media_next_track
            target:
              entity_id: !input media_player
    default:
      - service: input_text.set_value
        data:
          entity_id: input_text.last_scanned_tag
          value: !input tag_id

      - if:
          - condition: template
            value_template: "{{ is_radio }}"
        then:
          - service: counter.increment
            entity_id: counter.last_radio_index
        else:
          - service: counter.reset
            entity_id: counter.last_radio_index

      - variables:
          station_index: "{{ (states('counter.last_radio_index') | int) % (stations | length) }}"
          station_url: "{{ stations[station_index] if is_radio else media_content_id }}"

      - service: media_player.volume_set
        target:
          entity_id: !input media_player
        data:
          volume_level: 0.1

      - service: media_player.play_media
        target:
          entity_id: !input media_player
        data:
          media_content_id: "{{ station_url }}"
          media_content_type: "{{ 'music' if is_radio else media_content_type }}"

mode: restart
